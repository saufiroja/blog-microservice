syntax = "proto3";

package pb;

option go_package = "./user";

service UserService {
    rpc FindAllUsers(PaginationRequest) returns (FindAllUsersResponse);
    rpc InsertUser(InsertUserDTO) returns (UserResponse);
    rpc FindUsersByEmail(FindUsersByEmailRequest) returns (FindUsersResponse);
    rpc FindUsersByID (FindUsersByIDRequest) returns (FindUsersResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UserResponse);
    rpc DeleteUser (DeleteUserRequest) returns (UserResponse);
}

message FindUsersDTO {
    string id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    int32 created_at = 5;
}

message FindUsersResponse {
    int32 code = 1;
    string message = 2;
    FindUsersDTO result = 3;
}

message UserResponse {
    int32 code = 1;
    string message = 2;
}


// pagination
message Pagination {
    int32 total_data = 1;
    int32 total_page = 2;
    int32 page = 3;
    int32 limit = 4;
    int32 offset = 5;
}

message PaginationRequest {
    int32 page = 1;
    int32 limit = 2;
}

// find all users
message FindAllUsersDTO{
    string id = 1;
    string name = 2;
    string email = 3;
    int32 created_at = 4;
}

message FindAllUsersResponse {
    int32 code = 1;
    string message = 2;
    Pagination pagination = 3;
    repeated FindAllUsersDTO result = 4;
}

// insert user
message InsertUserDTO {
    string id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    int32 created_at = 5;
    int32 updated_at = 6;
}

// find users by email
message FindUsersByEmailRequest {
    string email = 1;
}

// find users by id
message FindUsersByIDRequest {
    string id = 1;
}


// update user
message UpdateUserRequest {
    string id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    int32 updated_at = 5;
}

// delete user
message DeleteUserRequest {
    string id = 1;
}
